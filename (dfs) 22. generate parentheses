class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        if n == 0: return []
        ans = []
        self.dfs(n, n, "", ans)
        return ans
    
    def dfs(self, L, R, symbol, ans):
        if R < L: return
        if R == 0 and L == 0:
            ans.append(symbol)
        if L > 0: self.dfs(L - 1, R, symbol + "(", ans)
        if R > 0: self.dfs(L, R - 1, symbol + ")", ans)
