class Solution:
    # @param root, a tree node
    # @return nothing, do it in place
    def flatten(self, root):
        if not root: return
        L = root.left
        R = root.right
        self.flatten(L)
        
        root.left = None
        root.right = L
        while root.right:
            root = root.right
        self.flatten(R)
        root.right = R
    
    ##############have question
    
    
    
    class Solution(object):
    def flatten(self, root):
        """
        :type root: TreeNode
        :rtype: void Do not return anything, modify root in-place instead.
        """
        stack = []
        while root:
            if root.left:
                if root.right:
                    stack.append(root.right)
                root.right, root.left = root.left, None
            if not root.right and stack:
                root.right = stack.pop()
            root = root.right

