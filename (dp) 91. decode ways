class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        if s == "" or s[0] == '0': return 0
        
        dp = [1, 1]
        
        for i in range(2, len(s) + 1):
            if 10 <= int(s[i - 2: i]) <= 26 and s[i - 1] != '0':
                dp.append(dp[i - 2] + dp[i - 1])
            elif int(s[i - 2: i]) == 10 or int(s[i - 2: i]) == 20:
                dp.append(dp[i - 2])
            elif s[i - 1] != '0':
                dp.append(dp[i - 1])
            else:
                return 0
        return dp[len(s)]
        
  ### three conditions: 1) s[i - 2: i] in [10,26] but not include 10 and 20, dp[i] = dp[i - 2] + dp[i - 1].
                        2) s[i - 2: i] is 10 or 20: dp[i] = dp[i - 2]
                        3) s[i - 2: i] in [01, 09]: dp[i] = dp[i - 1]
                #####
